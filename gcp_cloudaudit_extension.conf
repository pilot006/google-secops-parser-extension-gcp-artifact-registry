filter {

    # Fields we want to test on should be initialized as blank
    mutate {
        replace => {
            "protoPayload.response.vulnerability.shortDescription" => ""
        }
    }

    json {
        source => "message"
    }
    
    # The 'shortDescription' field has the CVE ID in it. If it's present
    #  process as a container vulnerability
    if [protoPayload][response][vulnerability][shortDescription] != "" {
        
        # Affected container is a URL. We'll populate this is target.application
        mutate {
            replace => {
                "event.idm.read_only_udm.target.application" => "%{protoPayload.response.resourceUri}"
            }
        }

        # The CVE details will go in 'extensions'. These fields are repeated
        #  so we need to map the data we want then 'merge'
        mutate {
            replace => {
                "this_vuln.cve_id" => "%{protoPayload.response.vulnerability.shortDescription}"
                "this_vuln.severity_details" => "%{protoPayload.response.vulnerability.effectiveSeverity}"
            }
        }

        # Map the severity properly to the enum: https://cloud.google.com/chronicle/docs/reference/udm-field-list#Vulnerability.Severity
        if [protoPayload][response][vulnerability][effectiveSeverity] == "LOW" or
           [protoPayload][response][vulnerability][effectiveSeverity] == "MEDIUM" or
           [protoPayload][response][vulnerability][effectiveSeverity] == "HIGH" or
           [protoPayload][response][vulnerability][effectiveSeverity] == "CRITICAL"
         {
            mutate {
                replace => {
                    "this_vuln.severity" => "%{protoPayload.response.vulnerability.effectiveSeverity}"
                }
            }
        }
        else {
            mutate {
                replace => {
                    "this_vuln.severity" => "UNKNOWN_SEVERITY"
                }
            }
        }

        mutate {
            merge => {
                "event.idm.read_only_udm.extensions.vulns.vulnerabilities" => "this_vuln"
           }
        }

        # Let's merge in our new UDM fields
        mutate {
            merge => {
                "@output" => "event"
            }
        }
    }
}
